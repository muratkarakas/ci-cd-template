version: '3.3'
services:
    jenkins:
        container_name: jenkins
        ports:
            - '8000:8080'
        volumes:
            - jenkins-data:/var/jenkins_home
            - /var/run/docker.sock:/var/run/docker.sock
            - $HOME/.m2:/root/.m2
        image: mkarakas/jenkins-dind:jdk11
        user: root
        networks:
          - cinet
    sonarqube:
        image: sonarqube:8.4.1-community
        deploy:
            resources:
              limits:
                cpus: '0.25'
                memory: 512M        
        ports:
          - "9000:9000"
        networks:
          - cinet
        environment:
          - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
          - SONARQUBE_JDBC_USERNAME=sonar
          - SONARQUBE_JDBC_PASSWORD=sonar
        volumes:
          - sonarqube_conf:/opt/sonarqube/conf
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions
          - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
        depends_on:
          - sonardb

    sonardb:
        image: postgres
        deploy:
            resources:
              limits:
                cpus: '0.25'
                memory: 256M
        networks:
          - cinet
        environment:
          - POSTGRES_USER=sonar
          - POSTGRES_PASSWORD=sonar
        volumes:
          - postgresql:/var/lib/postgresql
          - postgresql_data:/var/lib/postgresql/data



networks:
  cinet:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  jenkins-data:
